#!/bin/csh
###############################################################################
#
# FILE: noisediode
#
#    Send a noisediode command to an OTT telescope.
#
#    This command is called from the field system.
#
# HISTORY
#
# who          when           what
# ---------    -----------    ---------------------------------------
# lerner        8 Mar 2017    Original version
#
###############################################################################

#
#   Set up some important variables
#

set log_file = ~/noisediode.log

set basicstamp = /usr2/st/bin/basic_stamp
set telescope_file = /tmp/telescope_choice

alias wrap "/usr/bin/fold -s"

#
#   Check that we are running on a supported operating system
#

if ( `uname` != "Linux" ) then
   echo "Error: unsupported architecture `uname`\!"
   exit 1
endif

#
#   Check that we got the right number of arguments
#

if ( $#argv != 1 ) then
   echo "Error: bad number of arguments given to 'noisediode'\!"
   echo "Usage: noisediode on|off|ON|OFF"
   exit 1
endif

#
#   Check the argument
#

if ( "$1" == "on" || "$1" == "On" || "$1" == "ON" ) then
   set mode = "ON"
   set command = 0
else if ( "$1" == "off" || "$1" == "Off" || "$1" == "OFF" ) then
   set mode = "OFF"
   set command = 1
else
   echo "Error: bad argument given to 'noisediode'\!"
   echo "Usage: noisediode on|off|ON|OFF"
   exit 1
endif

#
#   Check if we are supposed to fake the command
#

if ( ! -r $telescope_file ) then
   echo "===============  FAKING turning NOISEDIODE $mode  ==============="
   exit 0
endif

if ( `cut -c -3 $telescope_file` != "OTT" ) then
   echo "===============  FAKING turning NOISEDIODE $mode  ==============="
   exit 0
endif

#
#   Check which telescope we are talking to
#

if ( `cut -c -5 $telescope_file` == "OTT-1" ) then
   set stamp_id = 192.165.6.81
else if ( `cut -c -5 $telescope_file` == "OTT-2" ) then
   set stamp_id = 192.165.6.80
else
   echo "Error: can't determine which telescope to talk to\!"
   exit 1
endif



#
#   Check that we can find the basic stamp communicator
#

if ( ! -f $basicstamp ) then
   echo "Sorry, I can't access the basic stamp communicator file"   \
        "'$basicstamp'\!" | wrap
   exit 1
endif

#
#   Send the command to the noisediode switch
#

set reply = ( `$basicstamp "$stamp_id 10001 0 101 $command"` )

set code = $status

if ( $code == 0 ) then
  if ( "$reply" != "OK" ) set code = 1
else
  set code = -1
endif

#
#   Log the command and its result
#

if ( $code == 0 ) then
   echo "===============  Turning NOISEDIODE $mode  ==============="
   date "+%c --- Noisediode turned $mode" >>! $log_file
else if ( $code == 1 )
   echo "ERROR: failed to turn NOISEDIODE $mode\!\!\!"
   date "+%c --- Failed to turn noisediode $mode" >>! $log_file
else
   echo "ERROR: failed to turn NOISEDIODE $mode --- no communication\!\!\!"
   date "+%c --- Failed to turn noisediode $mode --- no communication" >>!   \
        $log_file
endif

#
#   We are finished
#

exit $code
